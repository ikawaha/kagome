package data

import(
	"os"
	"time"
)

var _dicUniChardefDic = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\xdc\xfb\x52\xda\x4c\x14\x00\xf0\x6c\xe4\x92\x4f\x99\xf9\x9e\x69\x4b\xa9\x52\x90\x3a\xa8\x7f\x38\x7d\x9c\x5e\xde\xba\x43\x03\x45\xdb\xa2\x54\x30\x89\x4b\xe4\xf7\xe3\x12\xb2\x09\xc9\xd9\x9c\xe4\xc0\xcc\xce\x64\xb0\xf8\x92\x87\x7c\xf1\x35\x0b\x83\x2c\xfb\x5c\x4e\xcf\xfa\xef\x47\x1f\xe2\xed\xf4\xa6\x7b\x7d\x15\x87\xa3\xee\x24\xce\x3e\x8e\x7b\xd7\x77\x97\xef\x3e\x4d\xfb\xb3\xdb\xcb\xd1\x7c\x3c\xec\xc6\xe9\xd5\x45\x2c\x2e\xc6\xf3\x78\x1e\x67\xb1\x98\xc4\x9b\x58\xae\x17\x07\xab\x95\xef\x57\x3a\x9f\x8f\x46\x93\x62\x78\x37\x1f\x4f\xa7\xe3\xe1\x8f\x90\xf5\x4e\xb3\xf2\xfd\xb7\x10\x42\xf6\xe7\xfc\x7d\xf3\xc9\xdf\x3a\x0f\xd6\x0d\xdd\xad\x76\x59\xfe\x78\x87\x9b\x4e\xfe\x6d\xfb\xe6\x69\xd0\xf3\x79\x63\xab\xff\x0e\xc4\x32\x96\xd3\xa3\xf5\x2b\x17\x4f\xb7\x02\x00\x00\x00\x00\x00\xb4\x57\xea\x81\xc4\x74\x52\x1f\xf9\xc3\xf0\xcc\xf0\x7a\xed\x3a\x7b\x7a\xed\xf8\xaa\xda\xb7\x7f\x6d\xef\x2f\xed\xf6\xd6\xea\xcb\xbe\x0e\x3e\x40\x9a\x24\xfd\x24\xd5\x74\xfd\x6d\x7b\x7d\xa6\x59\xa9\xcf\x3f\x8e\x5b\x9e\x40\xea\xfd\x37\x6f\xf7\xe3\x5f\xb9\x7e\xf4\x9a\x95\xf5\x9b\x55\xf7\xf9\x7c\xe8\x36\xfb\x5f\xc7\x6f\x48\x8b\x1d\xfd\xff\x9f\xd4\x95\x0a\x00\x00\x00\x00\x00\x80\xa5\xfa\xc6\x03\x8b\x3c\x2f\x9f\xe5\xab\x68\x20\xcc\x3d\xb7\x59\xbc\xec\x6b\x50\x49\xf5\xf3\x6d\xa7\x2d\x34\x73\x8d\x91\x96\xac\xc2\x21\x72\x5d\x02\x00\x00\x00\x00\x00\x00\xc0\xab\x30\x44\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\xbc\x55\xf5\xdd\xef\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa0\x69\xa9\xef\xec\xdc\x2e\x95\x8e\x57\xea\x54\x03\x15\x9d\x54\x90\x3a\xf6\x27\x6d\xc4\xd8\x79\xb0\x6e\xe8\x6e\xb5\xdb\xf2\x95\xfe\x8b\xd5\xdc\xbd\x47\x39\x18\x2c\xbe\xe5\x21\x5f\x7c\xcf\x42\x59\x9f\xff\x2f\xa7\x67\x65\x63\x08\x21\x2b\x1f\x61\x35\xbf\xfc\xbc\xf6\x33\x00\x00\xff\xff\x99\x3b\xfd\xec\xa0\x00\x01\x00"

func dicUniChardefDicBytes() ([]byte, error) {
	return bindataRead(
		_dicUniChardefDic,
		"dic/uni/chardef.dic",
	)
}

func dicUniChardefDic() (*asset, error) {
	bytes, err := dicUniChardefDicBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dic/uni/chardef.dic", size: 65696, mode: os.FileMode(420), modTime: time.Unix(1452316537, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

